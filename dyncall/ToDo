dynload:
--------
- bug: test/nm crashes on qemu mips linux o32 debian etch
- do we need Dbghelp on windows?
  * if so, update gmake, etc... to link Dbghelp.lib
  * if not, get rid of the DbgHelp.lib link in test/nm
- rename SymsInit to InitSyms and similar for cleanup function to reflect naming
  in dyncall
- get rid of Dl_info and friends (_GNU_SOURCE) in dynload/dynload_syms_elf.c
  for implementation of dlSymsNameFromValue(..)


urgent issues:
--------------
- sed stuff in pcc.mk produces asm that assembles, however, it doesn't work on Plan9
  * move the sed script to 'maintainer' or so, and introduce real Plan9 assembly files (e.g. .8)
  * lookup Plan9 calling convention, or find what is different to SysV's calling convention
  * make it work
- introduce way to specify external libraries in .mkfiles (e.g. to link libdyncall_s.8 in tests)
- IDEA: add defines to dyncall_macros which 'contain' the platform arch (e.g. #define DC__Arch Intel_x86), this makes it probably easier in some cases to do platform specific stuff, instead of #if'ing and #elif'ing all the time - maibe even introduce #define DC__Arch_short x86, etc. to pick files in e.g. dyncall_call.S
- update: microsoft visual c++ build files - integrate all test suites in solution file
- test arm32/ATPCS/THUMB (and then change Status in doc Appendix)
- look over code and fix TODO or @@@ marks
- add MIPS callbacks
- finish PPC32 callbacks
- consider moving bindings into dyncall/ such that releases include it in the future
- add note to documentation, that bindings are svn-only ATM
- add pcc-support to doc
- check why the iyonix, etc. platforms have been taken out of 'configure'
- rename configure to configure.sh (so we would have .sh, .rc and .bat in the future)
- not sure, but configure(.sh) --tool-xxx might overwrite --asm-xxx, in some cases
- ARM-THUMB interwork tests would be great

nice to have:
-------------
- rename iPhoneOS to iOS
- maybe rename DC__Arch_PowerPC to ...PPC32 for coherency reasons (...PPC64)?
- consistency: on x64 platforms: make both ABIs available ('win64','sysv') for all x64 OS ports
- microsoft build enhancement: autodetect assembly via C preprocessor (like with .S gcc files)
- enhancement: state-machine error reporting (stack overflow and invalid mode)? (e.g. dcError() )

bugs:
-----
- vararg function calls don't work for PPC32 System V ABI
- vararg function calls don't work for ARM THUMB mode

missing implementations (descending priority):
----------------------------------------------
- sparc, sparc64
- ppc64
- itanium
- 68k, 88k, 6502, etc.
- mips64
- alpha
- sh
- cell
- blackfin
- z80
- hppa
- vax
- propeller
- amd29k

available hardware for outstanding ports:
-----------------------------------------
- 68k: Tassilo's old Palm m100 (MC68EZ328 (16MHz))
- sh4: Tassilo's Dreamcast
- mips R5900: Daniel's PS2
- mips (?): Daniel's router
- sigmatel stmp3550b: Daniel's iPod Nano

